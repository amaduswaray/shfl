
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

enum Status {
    LOBBY
    ONGOING
    END
}

enum Period {
    NEW
    MID
    OLD
}

model Game {
  id        String     @default(cuid()) @id
  title     String
  content   String?
  published Boolean   @default(false)
  players   User[]    @relation("players")
  host      User?     @relation("host", fields: [hostId], references: [id])
  hostId    String?
  status    Status
}

model GameSettings {
  id        String     @default(cuid()) @id
  title     String?
  songCount Int @default(2)
  songPeriod Period
  // Find way to create object for song object
}

model User {
  id            String       @default(cuid()) @id
  name          String?
  email         String?   @unique
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  gamesPlayed   Int       @default(0)
  shotsGiven    Int       @default(0)
  shotsTaken    Int       @default(0)
  playlist      String?
  games         Game[] @relation("players")
  hostedGames   Game[] @relation("host")
  @@map(name: "users")
}


// Create:
// Game: Has users, a host, playlist, sessionId, settings
// Settings: Song period, Amount of songs, which song index, Title, adult(boolean)

